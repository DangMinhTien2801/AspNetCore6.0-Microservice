{
  "GlobalConfiguration": {
    "BaseUrl": "http://apigw.ocelot"
  },
  "Routes": [
    // Customer api: http://localhost:5003/api/v1/customers
    {
      "UpstreamPathTemplate": "/customers/{username}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/v1/customers/{username}",
      "DownstreamSchema": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6003
        }
      ]
    },
    // Product api: http://localhost:5002/api/v1/products
    {
      "UpstreamPathTemplate": "/products/{id}",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/v1/products/{id}",
      "DownstreamSchema": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6002
        }
      ]
    },
    {
      "UpstreamPathTemplate": "/products/{id}",
      "UpstreamHttpMethod": [
        "PUT",
        "DELETE"
      ],
      "DownstreamPathTemplate": "/api/v1/products/{id}",
      "DownstreamSchema": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6002
        }
      ],
      "RouteClaimsRequirement": {
        "Role": "Admin"
      }
    },
    {
      "UpstreamPathTemplate": "/products",
      "UpstreamHttpMethod": [
        "POST"
      ],
      "DownstreamPathTemplate": "/api/v1/products",
      "DownstreamSchema": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6002
        }
      ],
      "RateLimitOptions": {
        "ClientWhiteList": [], // the client in this array will not be affacted by the rate limit
        "EnabeRateLimiting": true,
        "Period": "10s",
        "PeriodTimespan": 1, // retry after a certain number of seconds
        "Limit": 1 // the maximum number of request that a client can make in a defined period
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2, // If the service does not response for 2 seconds, it will throw time out exception
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000 // if the services throw a second exception, the service will not be accessible for five seconds        
      }
    },
    {
      "UpstreamPathTemplate": "/products",
      "UpstreamHttpMethod": [
        "GET"
      ],
      "DownstreamPathTemplate": "/api/v1/products",
      "DownstreamSchema": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "host.docker.internal",
          "Port": 6002
        }
      ],
      "RateLimitOptions": {
        "ClientWhiteList": [], // the client in this array will not be affacted by the rate limit
        "EnabeRateLimiting": true,
        "Period": "10s",
        "PeriodTimespan": 1, // retry after a certain number of seconds
        "Limit": 1 // the maximum number of request that a client can make in a defined period
      },
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 2, // If the service does not response for 2 seconds, it will throw time out exception
        "DurationOfBreak": 1000,
        "TimeoutValue": 5000 // if the services throw a second exception, the service will not be accessible for five seconds        
      },
      "FileCacheOptions": {
        "TtlSeconds": 15 // cache seconds
      }
    }
    // Basket api: http://localhost:5004/api/v1/baskets
    //{
    //  "UpstreamPathTemplate": "/baskets/{username}",
    //  "UpstreamHttpMethod": [
    //    "GET",
    //    "DELETE"
    //  ],
    //  "DownstreamPathTemplate": "/api/v1/baskets/{username}",
    //  "DownstreamSchema": "http",
    //  "DownstreamHostAndPorts": [
    //    {
    //      "Host": "host.docker.internal",
    //      "Port": 6004
    //    }
    //  ]
    //},
    //{
    //  "UpstreamPathTemplate": "/baskets",
    //  "UpstreamHttpMethod": [
    //    "POST"
    //  ],
    //  "DownstreamPathTemplate": "/api/v1/baskets",
    //  "DownstreamSchema": "http",
    //  "DownstreamHostAndPorts": [
    //    {
    //      "Host": "host.docker.internal",
    //      "Port": 6004
    //    }
    //  ]
    //},
    //{
    //  "UpstreamPathTemplate": "/baskets/checkout",
    //  "UpstreamHttpMethod": [
    //    "POST"
    //  ],
    //  "DownstreamPathTemplate": "/api/v1/baskets/checkout",
    //  "DownstreamSchema": "http",
    //  "DownstreamHostAndPorts": [
    //    {
    //      "Host": "host.docker.internal",
    //      "Port": 6004
    //    }
    //  ]
    //},
    // Order api: http://localhost:5005/api/v1/orders
    //{
    //  "UpstreamPathTemplate": "/{version}/orders/{username}",
    //  "UpstreamHttpMethod": [
    //    "GET"
    //  ],
    //  "DownstreamPathTemplate": "/api/{version}/orders/{username}",
    //  "DownstreamSchema": "http",
    //  "DownstreamHostAndPorts": [
    //    {
    //      "Host": "host.docker.internal",
    //      "Port": 6005
    //    }
    //  ]
    //},
    //{
    //  "UpstreamPathTemplate": "/{version}/orders",
    //  "UpstreamHttpMethod": [
    //    "POST"
    //  ],
    //  "DownstreamPathTemplate": "/api/{version}/orders",
    //  "DownstreamSchema": "http",
    //  "DownstreamHostAndPorts": [
    //    {
    //      "Host": "host.docker.internal",
    //      "Port": 6005
    //    }
    //  ]
    //}
  ]
}